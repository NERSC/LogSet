# An ontology for metadata describing log-like information about HPC systems,
# intended to support analysis of faults and failures.
#
# a client should be able to query a graph of logset objects to find, eg
# logfiles and job records etc about a specific job. or affected by a 
# specific component failure

# basic vocabularies used here:
# rdf and rdfs between them define essential types and relationships:
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
# owl adds a more constrained formal description logic for classes:
@prefix owl: <http://www.w3.org/2002/07/owl#> .
# dublin core terms, these form base of dcat vocab:
@prefix dct: <http://purl.org/dc/terms/> .
# XMLSchema defines "primitive" types like dateTime
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# the dataset definition is derived from the Data Catalog Vocabulary, with
# some extensions and restrictions to better map to aspects of a HPC center
@prefix dcat: <http://www.w3.org/ns/dcat#> .

# skos provides the idea of a "Concept", which we use to describe the type
# of information found in a LogSeries (eg "job_records", "log_messages")
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

# valid urls/bases/prefixes include:
#@prefix ddict: <https://raw.githubusercontent.com/NERSC/LogSet/master/etc/ddict#> .
#@prefix ddict: <file:///global/homes/s/sleak/Monitoring/Resilience/LogSet/etc/ddict#> .
#@prefix ddict: <../etc/ddict#> .

# declare myself and set a prefix:
@base <http://portal.nersc.gov/project/mpccc/sleak/resilience/datasets/> .
@prefix : <logset#> .
:
    a owl:Ontology ;
    dct:title "the LogSet vocabulary" ;
    rdfs:label "LogSet" ;
    owl:versionIRI <v0.3> ;
    .


# meta to help describe the volcabulary and support tools using it:
:recommendedProperty
    a owl:ObjectProperty ;
    rdfs:comment """ mechanism to inform developers and tools that an instance
                     of a logset class should have this property, though it is not
                     strictly required
                 """ ;
    rdfs:domain owl:Class ;
    rdfs:range rdf:Property ;
    .


:Pattern
    a owl:Class ;
    rdfs:comment """ Frequently specific subjects in a log or filenames relevant to a 
                     LogSeries are identified via regex (eg a reference to 
                     edison:nid00123 looks like 'nid00123', and a file called 
                     'messages-20170129' is probably a messages logfile for Jan 29, 
                     2017. Getting a correct regex for each thing is tedious and 
                     unreliable, so we build a database of regexes with human-readable
                     tags.  
                 """ ;
    rdfs:subClassOf [
        rdf:type owl:Restriction ;
        owl:onProperty :tag ;
        owl:cardinality 1 ;
    ] ;
    rdfs:subClassOf [
        rdf:type owl:Restriction ;
        owl:onProperty :regex ;
        owl:cardinality 1 ;
    ] ;
    rdfs:subClassOf [
        rdf:type owl:Restriction ;
        owl:onProperty :inUri ;
        owl:cardinality 1 ;
    ] ;
    .

:tag
    a owl:DatatypeProperty ;
    rdfs:domain :Pattern ;
    rdfs:range rdfs:Literal ;
    rdfs:comment """ a string that can appear in an identifyingPattern eg 
                       <date:YYYYMM> 
                 """ ;
    .

:regex
    a owl:DatatypeProperty ;
    rdfs:domain :Pattern ;
    rdfs:range rdfs:Literal ;
    rdfs:comment """ A regex in Python syntax, eg 
                       (?P<date>(?P<year>20[0-9]{2})(?P<month>0[1-9]|1[0-2]) 
                 """ ;
    .

:inUri
    a owl:DatatypeProperty ;
    rdfs:domain :Pattern ;
    rdfs:range rdfs:Literal ;
    rdfs:comment """ How the match can be used in the URI/name of a thing eg 
                       <year><month> 
                 """ ;
    .


# the classes in our vocabulary:
:Subject
    a owl:Class ;
    rdfs:subClassOf dct:PhysicalResource ;
    rdfs:comment """ A thing that a ConcreteLog is about, eg a system or subsystem
                     or a specific job or service (note that we slightly abuse 
                     PhysicalResource to include some non-physical things here).
                 """ ;
    :recommendedProperty rdfs:label,
                         dct:description ;
    .

:identifyingPattern
    a owl:DatatypeProperty ;
    rdfs:comment """ a string which includes known Pattern tags eg
                       console-<date:YYYYMMDD>
                     that can be mapped to a regex via a :Pattern, which can then be
                     used to match eg filenames, or log lines, relevant to a Subject
                     or LogSeries
                 """ ;
    #rdfs:domain owl:unionOf (:Subject, :LogSeries) ;
    rdfs:domain :Subject ;
    rdfs:range rdfs:Literal ;
    .

:affects
    a owl:ObjectProperty ;
    rdfs:comment """ Components in an HPC center are not a strict hierarchy, eg a 
                     filesystem might be shared by multiple systems. So we connect
                     non-hierarchically related systems and subsystems with an 
                     'affects' relationship
                 """ ;
    rdfs:domain :Subject ;
    rdfs:range :Subject ;
    .


:hasPart
    a owl:ObjectProperty ;
    rdfs:subPropertyOf :affects ;
    rdfs:comment """ For Subjects which really do form a strict hierarchy. Failure of 
                     a Subject implies failure of its parts too, though the reverse 
                     is not necessarily true, thus 'hasPart' (the state of the whole
                     propagates to its parts) rather than 'partOf'
                 """ ;
    rdfs:domain :Subject ;
    rdfs:range :Subject ;
    .


:endPointOf
    a owl:ObjectProperty ;
    rdfs:comment """ endpoint of something, primarily a network link. Failure doesn't 
                     necessarily pass an endpoint, eg a failed link might indirectly
                     impact the component that is an endPointOf it, but doesn't imply
                     that the endPoint also failed. Likewise, an endPoint failing 
                     doesn't imply that the link failed.
                 """ ;
    rdfs:domain :Subject ;
    rdfs:range :Subject ;
    .

