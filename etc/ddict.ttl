# A sample/starting data dictionary

@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .

# declare myself and set a prefix:
@base <http://portal.nersc.gov/project/mpccc/sleak/resilience/datasets/> .
@prefix logset: <logset#> .
@prefix : <ddict#> .

# is it an ontology, or an Asset whose type is an ontology or dictionary?
# An asset type should be a skos:Concept (via dct:type) .. how does that map
# to this?
# and a ttl file for logset might also be a dcat:Catalog, which catalogs logsets
# So I think the tool just needs to look for the properties of the empty prefix and 
# qname, raise an exception if it can't find any (hint to the user to put it on 
# command line), and create the appropriate thing in the default context.
#
# then `logs info` can return info about the assets/catalogs/dictionaries in the 
# locally-persisted graph .. and perhaps the seealsos that are references but not 
# included
# (including their adms: or dcat: distributions, ie where it was parsed from)

:
    a owl:Ontology ;
    dct:title "the base data dictionary for the LogSet vocabulary" ;
    rdfs:label "ddict" ;
    owl:imports logset: ;
    owl:versionIRI <v0.2> ;
    .

# some tags and corresponding python regex patterns to help in logseries identification:
# tags must be mostly-alphanumeric, with a colon allowed/used to separate a label for
# what the tag conveys from a shorthand version of the pattern it describes
# (this is because writing a full python regex for each filepattern is tedious and 
# error prone, and many have similar components, eg 'console-<date:YYYYMMDD>' and
# 'messages-<date:YYYYMMDD>')
:dateYYYYMMDD
    a logset:Pattern ;
    logset:tag "<date:YYYYMMDD>" ;
    logset:regex "(?P<date>(?P<year>20[0-9]{2})(?P<month>0[1-9]|1[0-2])(?P<day>[0-3][0-9]))" ;
    logset:inUri "<year><month><day>" ;
    .

:timeYYYYMMDDtHHmmss
    a logset:Pattern ;
    logset:tag "<time:YYYYMMDDtHHmmss>" ;
    logset:regex "(?P<time>(?P<year>20[0-9]{2})(?P<month>0[1-9]|1[0-2])(?P<day>[0-3][0-9])t(?P<hour>[01][0-9]|2[0-3])(?P<minute>[0-5][0-9])(?P<second>[0-5][0-9]))" ;
    logset:inUri "<year><month><day>t<hour><minute><seccond>" ;
    .

:timeYYYYMMDDHHmmss
    a logset:Pattern ;
    logset:tag "<time:YYYYMMDDHHmmss>" ; 
    logset:regex "(?P<time>(?P<year>20[0-9]{2})(?P<month>0[1-9]|1[0-2])(?P<day>[0-3][0-9])(?P<hour>[01][0-9]|2[0-3])(?P<minute>[0-5][0-9])(?P<second>[0-5][0-9]))" ;
    logset:inUri "<year><month><day><hour><minute><seccond>" ;
    .

:system
    a logset:Pattern ;
    logset:tag "<system:>" ; 
    logset:regex "(?P<system>[a-z][a-z0-9]+)" ;
    logset:inUri "<system>" ;
    .

:label
    a logset:Pattern ;
    logset:tag "<label:>" ; 
    logset:regex "(?P<label>[a-z][a-z0-9]+)" ;
    logset:inUri "<label>" ;
    .

# same sample Subject types and their relationships, to help in identifying the subject
# of a given ConcreteLog:

# there may be benefit in inserting another level of class hierarchy to classify
# subjects as eg Component or Service or Activity

:NetworkLink
    a owl:Class ;
    rdfs:subClassOf logset:Link ;
    rdfs:label "network link" ;
    skos:altLabel "link" ;
    rdfs:comment "a link between 2 ports, usually (but not necessarily) a cable" ;
    .

:Facility
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "facility" ;
    rdfs:comment "an HPC center, eg NERSC" ;
    .

:Cluster
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "cluster" ;
    rdfs:comment "an HPC system" ;
    .

:Server
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "server" ;
    rdfs:comment """ a thing that provides computing resources. Might be a standalone
                     server, a part of a cluster, a virtual machine, etc. Can host or 
                     be subdivided into other servers.
                 """ ;
    .

:Node
    a owl:Class ;
    rdfs:subClassOf :Server ;
    rdfs:label "node" ;
    rdfs:comment """ a server that is part of a cluster. 'node' implies a single  
                  primary memory address space (possibly with additional address 
                  spaces belonging to attached devices eg accelerators), and
                  might be implemented as a complete server, a subdivision of 
                  a server (eg Cray XC blades have 4 nodes), or even a virtual 
                  machine
              """ ;
    .

:Blade
    a owl:Class ;
    rdfs:subClassOf :Server ;
    rdfs:label "blade" ;
    skos:altLabel "slot" ;
    rdfs:comment "a server that is part of a chassis in a cluster" ;
    .

:Chassis
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "chassis" ;
    skos:altLabel "cage" ;
    rdfs:comment "a housing with some shared infrastructure for multiple blades" ;
    .

:Cabinet
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "cabinet" ;
    skos:altLabel "rack" ;
    skos:note "a standalone server" ;
    rdfs:comment "a housing for server equipment" ;
    .

:Switch
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "switch" ;
    skos:altLabel "router" ;
    rdfs:comment """ a network switch or router. The terms are used interchangably 
                     often enough that we choose not to differentiate them
                 """ ;
    .

:NIC
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "nic" ;
    rdfs:comment " a device for interfacing between a server and a network " ;
    .

:Port
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "port" ;
    rdfs:comment """ the interface between a network link and a component, eg a 
                     switch typically has many ports, a nic typically has one or two
                 """ ;
    .

:ComputeNode
    a owl:Class ;
    rdfs:subClassOf :Node ;
    rdfs:label "compute node" ;
    rdfs:comment "a node primarily intended for compute workloads"
    .

:LoginNode
    a owl:Class ;
    rdfs:subClassOf :Node ;
    rdfs:label "login node" ;
    rdfs:comment """ a node conceptually in front of the compute nodes of a cluster,
                     directly accessed by users and primarily intended for 
                     interactive use
                 """ ;
    .

:ServiceNode
    a owl:Class ;
    rdfs:subClassOf :Node ;
    rdfs:label "service node" ;
    rdfs:comment """ a node set aside to provide some service to the cluster, eg 
                     system management, I/O forwarding, etc
                 """ ;
    .

:Network
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "network" ;
    rdfs:comment "any network within or between facilities" ;
    .

:HSN
    a owl:Class ;
    rdfs:subClassOf :Network ;
    rdfs:label "hsn" ;
    rdfs:comment "the high speed network linking components of a cluster" ;
    .

:GbENetwork
    a owl:Class ;
    rdfs:subClassOf :Network ;
    rdfs:label "gbe" ;
    rdfs:comment "a network based on Gigabit Ethernet" ;
    .

:IBFabric
    a owl:Class ;
    rdfs:subClassOf :Network ;
    rdfs:label "infiniband" ;
    rdfs:comment "a network based on Infiniband" ;
    .

:Storage
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "storage" ;
    rdfs:comment "a data storage system (eg filesystem or tape archive)" ;
    .

:Filesystem
    a owl:Class ;
    rdfs:subClassOf :Storage ;
    rdfs:label "filesystem" ;
    rdfs:comment "storage that presents a filesystem"
    .

:LustreFilesystem
    a owl:Class ;
    rdfs:subClassOf :Filesystem ;
    rdfs:label "lustre filesystem" ;
    rdfs:comment "a Lustre high performance parallel filesystem" ;
    .

:GPFSFilesystem
    a owl:Class ;
    rdfs:subClassOf :Filesystem ;
    rdfs:label "gpfs filesystem" ;
    rdfs:comment "a GPFS parallel filesystem" ;
    .

# storage can also be categorized by its purpose:
:HomeStorage
    a owl:Class ;
    rdfs:subClassOf :Storage ;
    rdfs:label "home storage" ;
    rdfs:comment "storage prioritizing reliable storage and interactive use" ;
    .

:WorkFilesystem
    a owl:Class ;
    rdfs:subClassOf :Filesystem ;
    rdfs:label "work filesystem" ;
    rdfs:comment "a filesystem prioritizing fast, parallel I/O" ;
    .

:BurstBuffer
    a owl:Class ;
    rdfs:subClassOf :Storage ;
    rdfs:label "burst buffer" ;
    rdfs:comment "storage prioritizing latency and speed over size or longevity" ;
    .

:BatchSystem
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "batch system" ;
    rdfs:comment "a service for managing cluster workload in the form of batch jobs" ;
    .

:Scheduler
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "scheduler" ;
    rdfs:comment "a service for managing the when and where batch jobs are run" ;
    .

# a Job should be a subclass of subject too
# is there a general/natural taxonomy for non-physical things like this, eg an OS
# update might affect things, or an installed software (which has version etc)
:Activity
    a owl:Class ;
    rdfs:subClassOf logset:Subject ;
    rdfs:label "activity" ;
    rdfs:comment "some process or activity or event that used or impacted a system" ;
    .

:Job
    a owl:Class ;
    rdfs:subClassOf :Activity ;
    rdfs:label "job" ;
    rdfs:comment "a batch job using the system" ;
    .

